import requests

def test_method_responses(ip):
	results_dict = {
					  'GET': {},
					  'POST': {},
					  'PUT': {},
					  'DELETE': {},
					  'OPTIONS': {},
					  'TRACE': {},
					  'TEST': {}
				   }
	for method in results_dict.keys():
		try:
			req = requests.request(method, ip)
			results_dict[method]['status_code'] = req.status_code
			results_dict[method]['reason'] = req.reason
		except:
			pass
			results_dict[method]['status_code'] = None
			results_dict[method]['reason'] = None

	return results_dict


def scan_xst(ip):
	req = requests.request('TRACE', ip)
	if 'TRACE / HTTP/1.1' in req.text:
		return True
	else:
		return False



def scan_content_type_options(url):
	try:
		req = requests.get(url)
		options_content_type = req.headers['X-Content-Type-Options']
		if options_content_type != 'nosniff':
			return True, options_content_type
		else:
			return False, options_content_type
	except:
		pass
		return True, None



def scan_MITM(url):
	try:
		req = requests.get(url)
	except:
		return None
	try:
		transport_security = req.headers['Strict-Transport-Security']
		return False
	except:
		pass
		return True